{"version":3,"file":"covalent-guided-tour.js","sources":["ng://@covalent/guided-tour/guided.tour.ts","ng://@covalent/guided-tour/guided-tour.service.ts","ng://@covalent/guided-tour/guided-tour.module.ts"],"sourcesContent":["import Shepherd from 'shepherd.js';\nimport { timer, Subject, BehaviorSubject, merge, Subscription, fromEvent, forkJoin } from 'rxjs';\nimport { takeUntil, skipWhile, filter, skip, first } from 'rxjs/operators';\n\nexport type TourStep = Shepherd.Step.StepOptions;\nexport type TourStepButton = Shepherd.Step.StepOptionsButton;\n\nexport enum ITourEvent {\n  'click' = 'click',\n  'pointerover' = 'pointerover',\n  'keyup' = 'keyup',\n  'added' = 'added', // added to DOM\n  'removed' = 'removed', // removed from DOM\n}\n\nexport interface ITourEventOn {\n  selector?: string; // css selector\n  event?: keyof typeof ITourEvent; // click, pointerover, keyup, added, removed\n}\n\nexport interface ITourEventOnOptions {\n  timeBeforeShow?: number; // delay before step is displayed\n  interval?: number; // time between searches for element, defaults to 500ms\n}\n\nexport interface ITourAbortOn extends ITourEventOn {}\n\nexport interface ITourOptions extends Shepherd.Tour.TourOptions {\n  abortOn?: ITourAbortOn[]; // events to abort on\n}\n\nexport interface ITourStepAttachToOptions extends ITourEventOnOptions {\n  highlight?: boolean;\n  retries?: number; // # num of attempts to find element\n  skipIfNotFound?: boolean; // if element is not found after n retries, move on to next step\n  else?: string; // if element is not found, go to step with this id\n  goBackTo?: string; // back button goes back to step with this id\n  skipFromStepCount?: boolean; // show/hide progress on step\n}\n\nexport interface ITourStepAdvanceOn extends ITourEventOn {}\n\nexport interface ITourStepAdvanceOnOptions extends ITourEventOnOptions {\n  jumpTo?: string; // next button will jump to step with this id\n  allowGoBack?: boolean; // allow back within this step\n}\n\nexport interface ITourStep extends TourStep {\n  attachToOptions?: ITourStepAttachToOptions;\n  advanceOnOptions?: ITourStepAdvanceOnOptions;\n  advanceOn?: ITourStepAdvanceOn[] | ITourStepAdvanceOn | any;\n  abortOn?: ITourAbortOn[];\n  count?: number;\n}\n\nabstract class TourButtonsActions {\n  abstract next(): void;\n\n  abstract back(): void;\n\n  abstract cancel(): void;\n\n  abstract finish(): void;\n}\n\nconst SHEPHERD_DEFAULT_FIND_TIME_BEFORE_SHOW: number = 100;\nconst SHEPHERD_DEFAULT_FIND_INTERVAL: number = 500;\nconst SHEPHERD_DEFAULT_FIND_ATTEMPTS: number = 20;\n\nconst overriddenEvents: string[] = [\n  ITourEvent.click,\n  ITourEvent.pointerover,\n  ITourEvent.removed,\n  ITourEvent.added,\n  ITourEvent.keyup,\n];\n\nconst keyEvents: Map<number, string> = new Map<number, string>([\n  [13, 'enter'],\n  [27, 'esc'],\n]);\n\nconst defaultStepOptions: TourStep = {\n  scrollTo: { behavior: 'smooth', block: 'center' },\n  cancelIcon: {\n    enabled: true,\n  },\n};\n\nconst MAT_ICON_BUTTON: string = 'mat-icon-button material-icons mat-button-base';\nconst MAT_BUTTON: string = 'mat-button-base mat-button';\n\nexport class CovalentGuidedTour extends TourButtonsActions {\n  private _destroyedEvent$: Subject<void>;\n\n  shepherdTour: Shepherd.Tour;\n  stepOptions: ITourStep;\n\n  constructor(stepOptions: ITourStep = defaultStepOptions) {\n    super();\n\n    this.stepOptions = stepOptions;\n    this.newTour();\n  }\n\n  newTour(opts?: ITourOptions): void {\n    this.shepherdTour = new Shepherd.Tour(\n      Object.assign(\n        {\n          defaultStepOptions: this.stepOptions,\n        },\n        opts,\n      ),\n    );\n\n    this._destroyedEvent$ = new Subject<void>();\n    // listen to cancel and complete to clean up abortOn events\n    merge(fromEvent(this.shepherdTour, 'cancel'), fromEvent(this.shepherdTour, 'complete'))\n      .pipe(first())\n      .subscribe(() => {\n        this._destroyedEvent$.next();\n        this._destroyedEvent$.complete();\n      });\n\n    // if abortOn was passed, we bind the event and execute complete\n    if (opts && opts.abortOn) {\n      const abortArr$: Subject<void>[] = [];\n      opts.abortOn.forEach((abortOn: ITourAbortOn) => {\n        const abortEvent$: Subject<void> = new Subject<void>();\n        abortArr$.push(abortEvent$);\n        this._bindEvent(abortOn, undefined, abortEvent$, this._destroyedEvent$);\n      });\n\n      const abortSubs: Subscription = merge(...abortArr$)\n        .pipe(takeUntil(this._destroyedEvent$))\n        .subscribe(() => {\n          this.shepherdTour.complete();\n          abortSubs.unsubscribe();\n        });\n    }\n  }\n\n  back(): void {\n    this.shepherdTour.back();\n  }\n\n  cancel(): void {\n    this.shepherdTour.cancel();\n  }\n\n  next(): void {\n    this.shepherdTour.next();\n  }\n\n  finish(): void {\n    this.shepherdTour.complete();\n  }\n\n  addSteps(steps: ITourStep[]): void {\n    this.shepherdTour.addSteps(this._prepareTour(steps));\n  }\n\n  start(): void {\n    this.shepherdTour.start();\n  }\n\n  protected _prepareTour(\n    originalSteps: ITourStep[],\n    finishLabel: string = 'finish',\n    dismissLabel: string = 'cancel tour',\n  ): ITourStep[] {\n    // create Subjects for back and forward events\n    const backEvent$: Subject<void> = new Subject<void>();\n    const forwardEvent$: Subject<void> = new Subject<void>();\n    let _backFlow: boolean = false;\n    // create Subject for your end\n    const destroyedEvent$: Subject<void> = new Subject<void>();\n    /**\n     * This function adds the step progress in the footer of the shepherd tooltip\n     */\n    const appendProgressFunc: Function = function (): void {\n      // get all the footers that are available in the DOM\n      const footers: Element[] = Array.from<Element>(document.querySelectorAll('.shepherd-footer'));\n      // get the last footer since Shepherd always puts the active one at the end\n      const footer: Element = footers[footers.length - 1];\n      // generate steps html element\n      const progress: HTMLSpanElement = document.createElement('span');\n      progress.className = 'shepherd-progress';\n      progress.innerText = `${this.shepherdTour.currentStep.options.count}/${stepTotal}`;\n      // insert into the footer before the first button\n      footer.insertBefore(progress, footer.querySelector('.shepherd-button'));\n    };\n\n    let stepTotal: number = 0;\n    const steps: ITourStep[] = originalSteps.map((step: ITourStep) => {\n      let showProgress: Function;\n      if (step.attachToOptions?.skipFromStepCount === true) {\n        showProgress = function (): void {\n          return;\n        };\n      } else if (\n        step.attachToOptions?.skipFromStepCount === undefined ||\n        step.attachToOptions?.skipFromStepCount === false\n      ) {\n        step.count = ++stepTotal;\n        showProgress = appendProgressFunc.bind(this);\n      }\n      return Object.assign({}, step, {\n        when: {\n          show: showProgress,\n        },\n      });\n    });\n\n    const finishButton: TourStepButton = {\n      text: finishLabel,\n      action: this['finish'].bind(this),\n      classes: MAT_BUTTON,\n    };\n    const dismissButton: TourStepButton = {\n      text: dismissLabel,\n      action: this['cancel'].bind(this),\n      classes: MAT_BUTTON,\n    };\n\n    // listen to the destroyed event to clean up all the streams\n    this._destroyedEvent$.pipe(first()).subscribe(() => {\n      backEvent$.complete();\n      forwardEvent$.complete();\n      destroyedEvent$.next();\n      destroyedEvent$.complete();\n    });\n\n    const totalSteps: number = steps.length;\n    steps.forEach((step: ITourStep, index: number) => {\n      // create buttons specific for the step\n      // this is done to create more control on events\n      const nextButton: TourStepButton = {\n        text: 'chevron_right',\n        action: () => {\n          // intercept the next action and trigger event\n          forwardEvent$.next();\n          this.shepherdTour.next();\n        },\n        classes: MAT_ICON_BUTTON,\n      };\n      const backButton: TourStepButton = {\n        text: 'chevron_left',\n        action: () => {\n          // intercept the back action and trigger event\n          backEvent$.next();\n          _backFlow = true;\n          // check if 'goBackTo' is set to jump to a particular step, else just go back\n          if (step.attachToOptions && step.attachToOptions.goBackTo) {\n            this.shepherdTour.show(step.attachToOptions.goBackTo, false);\n          } else {\n            this.shepherdTour.back();\n          }\n        },\n        classes: MAT_ICON_BUTTON,\n      };\n\n      // check if highlight was provided for the step, else fallback into shepherds usage\n      step.highlightClass =\n        step.attachToOptions && step.attachToOptions.highlight ? 'shepherd-highlight' : step.highlightClass;\n\n      if (index === 0) {\n        // first step\n        step.buttons = [nextButton];\n      } else if (index === totalSteps - 1) {\n        // last step\n        step.buttons = [backButton, finishButton];\n      } else {\n        step.buttons = [backButton, nextButton];\n      }\n\n      // checks \"advanceOn\" to override listeners\n      let advanceOn: ITourStepAdvanceOn[] | ITourStepAdvanceOn = step.advanceOn;\n      // remove the shepherd \"advanceOn\" infavor of ours if the event is part of our list\n      if (\n        (typeof advanceOn === 'object' &&\n          !Array.isArray(advanceOn) &&\n          overriddenEvents.indexOf(advanceOn.event.split('.')[0]) > -1) ||\n        advanceOn instanceof Array\n      ) {\n        step.advanceOn = undefined;\n        step.buttons =\n          step.advanceOnOptions && step.advanceOnOptions.allowGoBack ? [backButton, dismissButton] : [dismissButton];\n      }\n      // adds a default beforeShowPromise function\n      step.beforeShowPromise = () => {\n        return new Promise((resolve: () => void) => {\n          const additionalCapabilitiesSetup: Function = () => {\n            if (advanceOn && !step.advanceOn) {\n              if (!Array.isArray(advanceOn)) {\n                advanceOn = [advanceOn];\n              }\n\n              const advanceArr$: Subject<void>[] = [];\n              advanceOn.forEach((_: any, i: number) => {\n                const advanceEvent$: Subject<void> = new Subject<void>();\n                advanceArr$.push(advanceEvent$);\n                // we start a timer of attempts to find an element in the dom\n                this._bindEvent(advanceOn[i], step.advanceOnOptions, advanceEvent$, destroyedEvent$);\n              });\n              const advanceSubs: Subscription = forkJoin(...advanceArr$)\n                .pipe(takeUntil(merge(destroyedEvent$, backEvent$)))\n                .subscribe(() => {\n                  // check if we need to advance to a specific step, else advance to next step\n                  if (step.advanceOnOptions && step.advanceOnOptions.jumpTo) {\n                    this.shepherdTour.show(step.advanceOnOptions.jumpTo);\n                  } else {\n                    this.shepherdTour.next();\n                  }\n                  forwardEvent$.next();\n                  advanceSubs.unsubscribe();\n                });\n            }\n\n            // if abortOn was passed on the step, we bind the event and execute complete\n            if (step.abortOn) {\n              const abortArr$: Subject<void>[] = [];\n              step.abortOn.forEach((abortOn: ITourAbortOn) => {\n                const abortEvent$: Subject<void> = new Subject<void>();\n                abortArr$.push(abortEvent$);\n                this._bindEvent(abortOn, undefined, abortEvent$, destroyedEvent$);\n              });\n\n              const abortSubs: Subscription = merge(...abortArr$)\n                .pipe(takeUntil(merge(destroyedEvent$, backEvent$, forwardEvent$)))\n                .subscribe(() => {\n                  this.shepherdTour.complete();\n                  abortSubs.unsubscribe();\n                });\n            }\n          };\n\n          const _stopTimer$: Subject<void> = new Subject<void>();\n          const _retriesReached$: Subject<number> = new Subject<number>();\n          const _retryAttempts$: BehaviorSubject<number> = new BehaviorSubject<number>(-1);\n\n          let id: string;\n          // checks if \"attachTo\" is a string or an object to get the id of an element\n          if (typeof step.attachTo === 'string') {\n            id = step.attachTo;\n          } else if (typeof step.attachTo === 'object' && typeof step.attachTo.element === 'string') {\n            id = step.attachTo.element;\n          }\n          // if we have an id as a string in either case, we use it (we ignore it if its HTMLElement)\n          if (id) {\n            // if current step is the first step of the tour, we set the buttons to be only \"next\" or \"dismiss\"\n            // we had to use `any` since the tour doesnt expose the steps in any fashion nor a way to check if we have modified them at all\n            if (this.shepherdTour.getCurrentStep() === (<any>this.shepherdTour).steps[0]) {\n              this.shepherdTour.getCurrentStep().updateStepOptions({\n                buttons: originalSteps[index].advanceOn ? [dismissButton] : [nextButton],\n              });\n            }\n            // register to the attempts observable to notify deeveloper when number has been reached\n            _retryAttempts$\n              .pipe(\n                skip(1),\n                takeUntil(merge(_stopTimer$.asObservable(), destroyedEvent$)),\n                skipWhile((val: number) => {\n                  if (step.attachToOptions && step.attachToOptions.retries !== undefined) {\n                    return val < step.attachToOptions.retries;\n                  }\n                  return val < SHEPHERD_DEFAULT_FIND_ATTEMPTS;\n                }),\n              )\n              .subscribe((attempts: number) => {\n                _retriesReached$.next();\n                _retriesReached$.complete();\n                // if attempts have been reached, we check \"skipIfNotFound\" to move on to the next step\n                if (step.attachToOptions && step.attachToOptions.skipIfNotFound) {\n                  // if we get to this step coming back from a step and it wasnt found\n                  // then we either check if its the first step and try going forward\n                  // or we keep going back until we find a step that actually exists\n                  if (_backFlow) {\n                    if ((<any>this.shepherdTour).steps.indexOf(this.shepherdTour.getCurrentStep()) === 0) {\n                      this.shepherdTour.next();\n                    } else {\n                      this.shepherdTour.back();\n                    }\n                    _backFlow = false;\n                  } else {\n                    // destroys current step if we need to skip it to remove it from the tour\n                    const currentStep: Shepherd.Step = this.shepherdTour.getCurrentStep();\n                    currentStep.destroy();\n                    this.shepherdTour.next();\n                    this.shepherdTour.removeStep((<Shepherd.Step.StepOptions>currentStep).id);\n                  }\n                } else if (step.attachToOptions && step.attachToOptions.else) {\n                  // if \"skipIfNotFound\" is not true, then we check if \"else\" has been set to jump to a specific step\n                  this.shepherdTour.show(step.attachToOptions.else);\n                } else {\n                  // tslint:disable-next-line:no-console\n                  console.warn(`Retries reached trying to find ${id}. Retried  ${attempts} times.`);\n                  // else we show the step regardless\n                  resolve();\n                }\n              });\n\n            // we start a timer of attempts to find an element in the dom\n            timer(\n              (step.attachToOptions && step.attachToOptions.timeBeforeShow) || SHEPHERD_DEFAULT_FIND_TIME_BEFORE_SHOW,\n              (step.attachToOptions && step.attachToOptions.interval) || SHEPHERD_DEFAULT_FIND_INTERVAL,\n            )\n              .pipe(\n                // the timer will continue either until we find the element or the number of attempts has been reached\n                takeUntil(merge(_stopTimer$, _retriesReached$, destroyedEvent$)),\n              )\n              .subscribe(() => {\n                const element: HTMLElement = document.querySelector(id);\n                // if the element has been found, we stop the timer and resolve the promise\n                if (element) {\n                  _stopTimer$.next();\n                  _stopTimer$.complete();\n                  additionalCapabilitiesSetup();\n                  resolve();\n                } else {\n                  _retryAttempts$.next(_retryAttempts$.value + 1);\n                }\n              });\n\n            // stop find interval if user stops the tour\n            destroyedEvent$.subscribe(() => {\n              _stopTimer$.next();\n              _stopTimer$.complete();\n              _retriesReached$.next();\n              _retriesReached$.complete();\n            });\n          } else {\n            // resolve observable until the timeBeforeShow has passsed or use default\n            timer(\n              (step.attachToOptions && step.attachToOptions.timeBeforeShow) || SHEPHERD_DEFAULT_FIND_TIME_BEFORE_SHOW,\n            )\n              .pipe(takeUntil(merge(destroyedEvent$)))\n              .subscribe(() => {\n                resolve();\n              });\n          }\n        });\n      };\n    });\n    return steps;\n  }\n\n  private _bindEvent(\n    eventOn: ITourEventOn,\n    eventOnOptions: ITourEventOnOptions,\n    event$: Subject<void>,\n    destroyedEvent$: Subject<void>,\n  ): void {\n    const selector: string = eventOn.selector;\n    const event: string = eventOn.event;\n    // we start a timer of attempts to find an element in the dom\n    const timerSubs: Subscription = timer(\n      (eventOnOptions && eventOnOptions.timeBeforeShow) || SHEPHERD_DEFAULT_FIND_TIME_BEFORE_SHOW,\n      (eventOnOptions && eventOnOptions.interval) || SHEPHERD_DEFAULT_FIND_INTERVAL,\n    )\n      .pipe(takeUntil(destroyedEvent$))\n      .subscribe(() => {\n        const element: HTMLElement = document.querySelector(selector);\n        // if the element has been found, we stop the timer and resolve the promise\n        if (element) {\n          timerSubs.unsubscribe();\n\n          if (event === ITourEvent.added) {\n            // if event is \"Added\" trigger a soon as this is attached.\n            event$.next();\n            event$.complete();\n          } else if (\n            event === ITourEvent.click ||\n            event === ITourEvent.pointerover ||\n            event.indexOf(ITourEvent.keyup) > -1\n          ) {\n            // we use normal listeners for mouseevents\n            const mainEvent: string = event.split('.')[0];\n            const subEvent: string = event.split('.')[1];\n            fromEvent(element, mainEvent)\n              .pipe(\n                takeUntil(merge(event$.asObservable(), destroyedEvent$)),\n                filter(($event: Event) => {\n                  // only trigger if the event is a keyboard event and part of out list\n                  if ($event instanceof KeyboardEvent) {\n                    if (keyEvents.get($event.keyCode) === subEvent) {\n                      return true;\n                    }\n                    return false;\n                  } else {\n                    return true;\n                  }\n                }),\n              )\n              .subscribe(() => {\n                event$.next();\n                event$.complete();\n              });\n          } else if (event === ITourEvent.removed) {\n            // and we will use MutationObserver for DOM events\n            const observer: MutationObserver = new MutationObserver(() => {\n              if (!document.body.contains(element)) {\n                event$.next();\n                event$.complete();\n                observer.disconnect();\n              }\n            });\n\n            // stop listenining if tour is closed\n            destroyedEvent$.subscribe(() => {\n              observer.disconnect();\n            });\n            // observe for any DOM interaction in the element\n            observer.observe(element, { childList: true, subtree: true, attributes: true });\n          }\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  Router,\n  ActivatedRoute,\n  ParamMap,\n  NavigationExtras,\n  NavigationStart,\n  Event as NavigationEvent,\n} from '@angular/router';\nimport Shepherd from 'shepherd.js';\nimport { tap, map, filter } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { CovalentGuidedTour, ITourStep, ITourOptions } from './guided.tour';\n\nexport interface IGuidedTour extends ITourOptions {\n  steps: IGuidedTourStep[];\n  finishButtonText?: string;\n  dismissButtonText?: string;\n}\n\nexport interface IGuidedTourStep extends ITourStep {\n  routing?: {\n    route: string;\n    extras?: NavigationExtras;\n  };\n}\n\n/**\n *  Router enabled Shepherd tour\n */\n\n@Injectable()\nexport class CovalentGuidedTourService extends CovalentGuidedTour {\n  private _toursMap: Map<string, IGuidedTour> = new Map<string, IGuidedTour>();\n\n  constructor(private _router: Router, private _route: ActivatedRoute, private _httpClient: HttpClient) {\n    super();\n    _router.events\n      .pipe(\n        filter((event: NavigationEvent) => event instanceof NavigationStart && event.navigationTrigger === 'popstate'),\n      )\n      .subscribe((event: NavigationEvent) => {\n        if (this.shepherdTour.isActive) {\n          this.shepherdTour.cancel();\n        }\n      });\n  }\n\n  async registerTour(tourName: string, tour: IGuidedTour | string): Promise<void> {\n    const guidedTour: IGuidedTour = typeof tour === 'string' ? await this._loadTour(tour) : tour;\n    this._toursMap.set(tourName, guidedTour);\n  }\n\n  startTour(tourName: string): Shepherd.Tour {\n    const guidedTour: IGuidedTour = this._getTour(tourName);\n    this.finish();\n    if (guidedTour && guidedTour.steps && guidedTour.steps.length) {\n      // remove steps from tour since we need to preprocess them first\n      this.newTour(Object.assign({}, guidedTour, { steps: undefined }));\n      const tourInstance: Shepherd.Tour = this.shepherdTour.addSteps(\n        this._configureRoutesForSteps(\n          this._prepareTour(guidedTour.steps, guidedTour.finishButtonText, guidedTour.dismissButtonText),\n        ),\n      );\n      this.start();\n      return tourInstance;\n    } else {\n      // tslint:disable-next-line:no-console\n      console.warn(`Tour ${tourName} does not exist. Please try another tour.`);\n    }\n  }\n\n  // Finds the right registered tour by using queryParams\n  // finishes any other tour and starts the new one.\n  initializeOnQueryParams(queryParam: string = 'tour'): Observable<ParamMap> {\n    return this._route.queryParamMap.pipe(\n      debounceTime(100),\n      tap((params: ParamMap) => {\n        const tourParam: string = params.get(queryParam);\n        if (tourParam) {\n          this.startTour(tourParam);\n          // get current search parameters\n          const searchParams: URLSearchParams = new URLSearchParams(window.location.search);\n          // delete tour queryParam\n          searchParams.delete(queryParam);\n          // build new URL string without it\n          let url: string = window.location.protocol + '//' + window.location.host + window.location.pathname;\n          if (searchParams.toString()) {\n            url += '?' + searchParams.toString();\n          }\n          // replace state in history without triggering a navigation\n          window.history.replaceState({ path: url }, '', url);\n        }\n      }),\n    );\n  }\n\n  private async _loadTour(tourUrl: string): Promise<any> {\n    const request: Observable<object> = this._httpClient.get(tourUrl);\n    try {\n      return await request\n        .pipe(\n          map((resultSet: any) => {\n            return JSON.parse(JSON.stringify(resultSet));\n          }),\n        )\n        .toPromise();\n    } catch {\n      return undefined;\n    }\n  }\n\n  private _getTour(key: string): IGuidedTour {\n    return this._toursMap.get(key);\n  }\n\n  private _configureRoutesForSteps(routedSteps: IGuidedTourStep[]): IGuidedTourStep[] {\n    routedSteps.forEach((step: IGuidedTourStep) => {\n      if (step.routing) {\n        const route: string = step.routing.route;\n        // if there is a beforeShowPromise, then we save it and call it after the navigation\n        if (step.beforeShowPromise) {\n          const beforeShowPromise: () => Promise<void> = step.beforeShowPromise;\n          step.beforeShowPromise = () => {\n            return this._router.navigate([route], step.routing.extras).then(() => {\n              return beforeShowPromise();\n            });\n          };\n        } else {\n          step.beforeShowPromise = () => this._router.navigate([route]);\n        }\n      }\n    });\n\n    return routedSteps;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CovalentGuidedTourService } from './guided-tour.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CovalentGuidedTourService],\n  declarations: [],\n  exports: [],\n})\nexport class CovalentGuidedTourModule {}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;IAQE,SAAU,OAAO;IACjB,eAAgB,aAAa;IAC7B,SAAU,OAAO;IACjB,SAAU,OAAO;IACjB,WAAY,SAAS;;;;;2BAMtB;;;IAFC,gCAAkB;;IAClB,6BAAgC;;;;;kCAMjC;;;IAFC,6CAAwB;;IACxB,uCAAkB;;;;;2BAGiC;;;;2BAIpD;;;IADC,+BAAyB;;;;;uCAU1B;;;IANC,6CAAoB;;IACpB,2CAAiB;;IACjB,kDAAyB;;IACzB,wCAAc;;IACd,4CAAkB;;IAClB,qDAA4B;;;;;iCAG6B;;;;wCAK1D;;;IAFC,2CAAgB;;IAChB,gDAAsB;;;;;wBASvB;;;IALC,oCAA2C;;IAC3C,qCAA6C;;IAC7C,8BAA4D;;IAC5D,4BAAyB;;IACzB,0BAAe;;;;;AAGjB;;;;IAAA;KAQC;IAAD,yBAAC;AAAD,CAAC,IAAA;;;;;;IAPC,oDAAsB;;;;;IAEtB,oDAAsB;;;;;IAEtB,sDAAwB;;;;;IAExB,sDAAwB;;;IAGpB,sCAAsC,GAAW,GAAG;;IACpD,8BAA8B,GAAW,GAAG;;IAC5C,8BAA8B,GAAW,EAAE;;IAE3C,gBAAgB,GAAa;IACjC,UAAU,CAAC,KAAK;IAChB,UAAU,CAAC,WAAW;IACtB,UAAU,CAAC,OAAO;IAClB,UAAU,CAAC,KAAK;IAChB,UAAU,CAAC,KAAK;CACjB;;IAEK,SAAS,GAAwB,IAAI,GAAG,CAAiB;IAC7D,CAAC,EAAE,EAAE,OAAO,CAAC;IACb,CAAC,EAAE,EAAE,KAAK,CAAC;CACZ,CAAC;;IAEI,kBAAkB,GAAa;IACnC,QAAQ,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;IACjD,UAAU,EAAE;QACV,OAAO,EAAE,IAAI;KACd;CACF;;IAEK,eAAe,GAAW,gDAAgD;;IAC1E,UAAU,GAAW,4BAA4B;;IAEf,sCAAkB;IAMxD,4BAAY,WAA2C;QAA3C,4BAAA,EAAA,gCAA2C;QAAvD,YACE,iBAAO,SAIR;QAFC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,OAAO,EAAE,CAAC;;KAChB;;;;;IAED,oCAAO;;;;IAAP,UAAQ,IAAmB;QAA3B,iBAmCC;QAlCC,IAAI,CAAC,YAAY,GAAG,IAAI,QAAQ,CAAC,IAAI,CACnC,MAAM,CAAC,MAAM,CACX;YACE,kBAAkB,EAAE,IAAI,CAAC,WAAW;SACrC,EACD,IAAI,CACL,CACF,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,OAAO,EAAQ,CAAC;;QAE5C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;aACpF,IAAI,CAAC,KAAK,EAAE,CAAC;aACb,SAAS;;;QAAC;YACT,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;YAC7B,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;SAClC,EAAC,CAAC;;QAGL,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;;gBAClB,WAAS,GAAoB,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,OAAO;;;;YAAC,UAAC,OAAqB;;oBACnC,WAAW,GAAkB,IAAI,OAAO,EAAQ;gBACtD,WAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;aACzE,EAAC,CAAC;;gBAEG,WAAS,GAAiB,KAAK,wBAAI,WAAS,GAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACtC,SAAS;;;YAAC;gBACT,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;gBAC7B,WAAS,CAAC,WAAW,EAAE,CAAC;aACzB,EAAC;SACL;KACF;;;;IAED,iCAAI;;;IAAJ;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;;;IAED,mCAAM;;;IAAN;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;KAC5B;;;;IAED,iCAAI;;;IAAJ;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;;;IAED,mCAAM;;;IAAN;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;;;;;IAED,qCAAQ;;;;IAAR,UAAS,KAAkB;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;KACtD;;;;IAED,kCAAK;;;IAAL;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;KAC3B;;;;;;;;IAES,yCAAY;;;;;;;IAAtB,UACE,aAA0B,EAC1B,WAA8B,EAC9B,YAAoC;QAHtC,iBAuRC;QArRC,4BAAA,EAAA,sBAA8B;QAC9B,6BAAA,EAAA,4BAAoC;;;YAG9B,UAAU,GAAkB,IAAI,OAAO,EAAQ;;YAC/C,aAAa,GAAkB,IAAI,OAAO,EAAQ;;YACpD,SAAS,GAAY,KAAK;;;YAExB,eAAe,GAAkB,IAAI,OAAO,EAAQ;;;;;YAIpD,kBAAkB;;;QAAa;;;gBAE7B,OAAO,GAAc,KAAK,CAAC,IAAI,CAAU,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;;;gBAEvF,MAAM,GAAY,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;;gBAE7C,QAAQ,GAAoB,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;YAChE,QAAQ,CAAC,SAAS,GAAG,mBAAmB,CAAC;YACzC,QAAQ,CAAC,SAAS,GAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,SAAI,SAAW,CAAC;;YAEnF,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACzE,CAAA;;YAEG,SAAS,GAAW,CAAC;;YACnB,KAAK,GAAgB,aAAa,CAAC,GAAG;;;;QAAC,UAAC,IAAe;;;gBACvD,YAAsB;YAC1B,IAAI,OAAA,IAAI,CAAC,eAAe,0CAAE,iBAAiB,MAAK,IAAI,EAAE;gBACpD,YAAY;;;gBAAG;oBACb,OAAO;iBACR,CAAA,CAAC;aACH;iBAAM,IACL,OAAA,IAAI,CAAC,eAAe,0CAAE,iBAAiB,MAAK,SAAS;gBACrD,OAAA,IAAI,CAAC,eAAe,0CAAE,iBAAiB,MAAK,KAAK,EACjD;gBACA,IAAI,CAAC,KAAK,GAAG,EAAE,SAAS,CAAC;gBACzB,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;aAC9C;YACD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;iBACnB;aACF,CAAC,CAAC;SACJ,EAAC;;YAEI,YAAY,GAAmB;YACnC,IAAI,EAAE,WAAW;YACjB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,UAAU;SACpB;;YACK,aAAa,GAAmB;YACpC,IAAI,EAAE,YAAY;YAClB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,UAAU;SACpB;;QAGD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS;;;QAAC;YAC5C,UAAU,CAAC,QAAQ,EAAE,CAAC;YACtB,aAAa,CAAC,QAAQ,EAAE,CAAC;YACzB,eAAe,CAAC,IAAI,EAAE,CAAC;YACvB,eAAe,CAAC,QAAQ,EAAE,CAAC;SAC5B,EAAC,CAAC;;YAEG,UAAU,GAAW,KAAK,CAAC,MAAM;QACvC,KAAK,CAAC,OAAO;;;;;QAAC,UAAC,IAAe,EAAE,KAAa;;;;gBAGrC,UAAU,GAAmB;gBACjC,IAAI,EAAE,eAAe;gBACrB,MAAM;;;gBAAE;;oBAEN,aAAa,CAAC,IAAI,EAAE,CAAC;oBACrB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;iBAC1B,CAAA;gBACD,OAAO,EAAE,eAAe;aACzB;;gBACK,UAAU,GAAmB;gBACjC,IAAI,EAAE,cAAc;gBACpB,MAAM;;;gBAAE;;oBAEN,UAAU,CAAC,IAAI,EAAE,CAAC;oBAClB,SAAS,GAAG,IAAI,CAAC;;oBAEjB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;wBACzD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBAC9D;yBAAM;wBACL,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;qBAC1B;iBACF,CAAA;gBACD,OAAO,EAAE,eAAe;aACzB;;YAGD,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC;YAEtG,IAAI,KAAK,KAAK,CAAC,EAAE;;gBAEf,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;aAC7B;iBAAM,IAAI,KAAK,KAAK,UAAU,GAAG,CAAC,EAAE;;gBAEnC,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;aAC3C;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;aACzC;;;gBAGG,SAAS,GAA8C,IAAI,CAAC,SAAS;;YAEzE,IACE,CAAC,OAAO,SAAS,KAAK,QAAQ;gBAC5B,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;gBACzB,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9D,SAAS,YAAY,KAAK,EAC1B;gBACA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,OAAO;oBACV,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;aAC9G;;YAED,IAAI,CAAC,iBAAiB;;;YAAG;gBACvB,OAAO,IAAI,OAAO;;;;gBAAC,UAAC,OAAmB;;wBAC/B,2BAA2B;;;oBAAa;wBAC5C,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;4BAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gCAC7B,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;6BACzB;;gCAEK,aAAW,GAAoB,EAAE;4BACvC,SAAS,CAAC,OAAO;;;;;4BAAC,UAAC,CAAM,EAAE,CAAS;;oCAC5B,aAAa,GAAkB,IAAI,OAAO,EAAQ;gCACxD,aAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;gCAEhC,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC;6BACtF,EAAC,CAAC;;gCACG,aAAW,GAAiB,QAAQ,wBAAI,aAAW,GACtD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;iCACnD,SAAS;;;4BAAC;;gCAET,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;oCACzD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;iCACtD;qCAAM;oCACL,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;iCAC1B;gCACD,aAAa,CAAC,IAAI,EAAE,CAAC;gCACrB,aAAW,CAAC,WAAW,EAAE,CAAC;6BAC3B,EAAC;yBACL;;wBAGD,IAAI,IAAI,CAAC,OAAO,EAAE;;gCACV,WAAS,GAAoB,EAAE;4BACrC,IAAI,CAAC,OAAO,CAAC,OAAO;;;;4BAAC,UAAC,OAAqB;;oCACnC,WAAW,GAAkB,IAAI,OAAO,EAAQ;gCACtD,WAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gCAC5B,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;6BACnE,EAAC,CAAC;;gCAEG,WAAS,GAAiB,KAAK,wBAAI,WAAS,GAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;iCAClE,SAAS;;;4BAAC;gCACT,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;gCAC7B,WAAS,CAAC,WAAW,EAAE,CAAC;6BACzB,EAAC;yBACL;qBACF,CAAA;;wBAEK,WAAW,GAAkB,IAAI,OAAO,EAAQ;;wBAChD,gBAAgB,GAAoB,IAAI,OAAO,EAAU;;wBACzD,eAAe,GAA4B,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;;wBAE5E,EAAU;;oBAEd,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;wBACrC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;qBACpB;yBAAM,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,QAAQ,EAAE;wBACzF,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC5B;;oBAED,IAAI,EAAE,EAAE;;;wBAGN,IAAI,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,oBAAM,KAAI,CAAC,YAAY,IAAE,KAAK,CAAC,CAAC,CAAC,EAAE;4BAC5E,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,iBAAiB,CAAC;gCACnD,OAAO,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC;6BACzE,CAAC,CAAC;yBACJ;;wBAED,eAAe;6BACZ,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,eAAe,CAAC,CAAC,EAC7D,SAAS;;;;wBAAC,UAAC,GAAW;4BACpB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,KAAK,SAAS,EAAE;gCACtE,OAAO,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;6BAC3C;4BACD,OAAO,GAAG,GAAG,8BAA8B,CAAC;yBAC7C,EAAC,CACH;6BACA,SAAS;;;;wBAAC,UAAC,QAAgB;4BAC1B,gBAAgB,CAAC,IAAI,EAAE,CAAC;4BACxB,gBAAgB,CAAC,QAAQ,EAAE,CAAC;;4BAE5B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;;;;gCAI/D,IAAI,SAAS,EAAE;oCACb,IAAI,oBAAM,KAAI,CAAC,YAAY,IAAE,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,EAAE;wCACpF,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;qCAC1B;yCAAM;wCACL,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;qCAC1B;oCACD,SAAS,GAAG,KAAK,CAAC;iCACnB;qCAAM;;;wCAEC,WAAW,GAAkB,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE;oCACrE,WAAW,CAAC,OAAO,EAAE,CAAC;oCACtB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;oCACzB,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,oBAA4B,WAAW,IAAE,EAAE,CAAC,CAAC;iCAC3E;6BACF;iCAAM,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE;;gCAE5D,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;6BACnD;iCAAM;;gCAEL,OAAO,CAAC,IAAI,CAAC,oCAAkC,EAAE,mBAAc,QAAQ,YAAS,CAAC,CAAC;;gCAElF,OAAO,EAAE,CAAC;6BACX;yBACF,EAAC,CAAC;;wBAGL,KAAK,CACH,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,KAAK,sCAAsC,EACvG,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,KAAK,8BAA8B,CAC1F;6BACE,IAAI;;wBAEH,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,gBAAgB,EAAE,eAAe,CAAC,CAAC,CACjE;6BACA,SAAS;;;wBAAC;;gCACH,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;;4BAEvD,IAAI,OAAO,EAAE;gCACX,WAAW,CAAC,IAAI,EAAE,CAAC;gCACnB,WAAW,CAAC,QAAQ,EAAE,CAAC;gCACvB,2BAA2B,EAAE,CAAC;gCAC9B,OAAO,EAAE,CAAC;6BACX;iCAAM;gCACL,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;6BACjD;yBACF,EAAC,CAAC;;wBAGL,eAAe,CAAC,SAAS;;;wBAAC;4BACxB,WAAW,CAAC,IAAI,EAAE,CAAC;4BACnB,WAAW,CAAC,QAAQ,EAAE,CAAC;4BACvB,gBAAgB,CAAC,IAAI,EAAE,CAAC;4BACxB,gBAAgB,CAAC,QAAQ,EAAE,CAAC;yBAC7B,EAAC,CAAC;qBACJ;yBAAM;;wBAEL,KAAK,CACH,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,KAAK,sCAAsC,CACxG;6BACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;6BACvC,SAAS;;;wBAAC;4BACT,OAAO,EAAE,CAAC;yBACX,EAAC,CAAC;qBACN;iBACF,EAAC,CAAC;aACJ,CAAA,CAAC;SACH,EAAC,CAAC;QACH,OAAO,KAAK,CAAC;KACd;;;;;;;;;IAEO,uCAAU;;;;;;;;IAAlB,UACE,OAAqB,EACrB,cAAmC,EACnC,MAAqB,EACrB,eAA8B;;YAExB,QAAQ,GAAW,OAAO,CAAC,QAAQ;;YACnC,KAAK,GAAW,OAAO,CAAC,KAAK;;;YAE7B,SAAS,GAAiB,KAAK,CACnC,CAAC,cAAc,IAAI,cAAc,CAAC,cAAc,KAAK,sCAAsC,EAC3F,CAAC,cAAc,IAAI,cAAc,CAAC,QAAQ,KAAK,8BAA8B,CAC9E;aACE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aAChC,SAAS;;;QAAC;;gBACH,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;;YAE7D,IAAI,OAAO,EAAE;gBACX,SAAS,CAAC,WAAW,EAAE,CAAC;gBAExB,IAAI,KAAK,KAAK,UAAU,CAAC,KAAK,EAAE;;oBAE9B,MAAM,CAAC,IAAI,EAAE,CAAC;oBACd,MAAM,CAAC,QAAQ,EAAE,CAAC;iBACnB;qBAAM,IACL,KAAK,KAAK,UAAU,CAAC,KAAK;oBAC1B,KAAK,KAAK,UAAU,CAAC,WAAW;oBAChC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EACpC;;;wBAEM,SAAS,GAAW,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;wBACvC,UAAQ,GAAW,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC5C,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;yBAC1B,IAAI,CACH,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,eAAe,CAAC,CAAC,EACxD,MAAM;;;;oBAAC,UAAC,MAAa;;wBAEnB,IAAI,MAAM,YAAY,aAAa,EAAE;4BACnC,IAAI,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,UAAQ,EAAE;gCAC9C,OAAO,IAAI,CAAC;6BACb;4BACD,OAAO,KAAK,CAAC;yBACd;6BAAM;4BACL,OAAO,IAAI,CAAC;yBACb;qBACF,EAAC,CACH;yBACA,SAAS;;;oBAAC;wBACT,MAAM,CAAC,IAAI,EAAE,CAAC;wBACd,MAAM,CAAC,QAAQ,EAAE,CAAC;qBACnB,EAAC,CAAC;iBACN;qBAAM,IAAI,KAAK,KAAK,UAAU,CAAC,OAAO,EAAE;;;wBAEjC,UAAQ,GAAqB,IAAI,gBAAgB;;;oBAAC;wBACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BACpC,MAAM,CAAC,IAAI,EAAE,CAAC;4BACd,MAAM,CAAC,QAAQ,EAAE,CAAC;4BAClB,UAAQ,CAAC,UAAU,EAAE,CAAC;yBACvB;qBACF,EAAC;;oBAGF,eAAe,CAAC,SAAS;;;oBAAC;wBACxB,UAAQ,CAAC,UAAU,EAAE,CAAC;qBACvB,EAAC,CAAC;;oBAEH,UAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjF;aACF;SACF,EAAC;KACL;IACH,yBAAC;AAAD,CA1aA,CAAwC,kBAAkB,GA0azD;;;;;;IAzaC,8CAAwC;;IAExC,0CAA4B;;IAC5B,yCAAuB;;;;;;;;;;0BC5ExB;;;IAHC,4BAAyB;;IACzB,uCAA0B;;IAC1B,wCAA2B;;;;;8BAQ5B;;;IAJC,kCAGE;;;;;;IAQ2C,6CAAkB;IAG/D,mCAAoB,OAAe,EAAU,MAAsB,EAAU,WAAuB;QAApG,YACE,iBAAO,SAUR;QAXmB,aAAO,GAAP,OAAO,CAAQ;QAAU,YAAM,GAAN,MAAM,CAAgB;QAAU,iBAAW,GAAX,WAAW,CAAY;QAF5F,eAAS,GAA6B,IAAI,GAAG,EAAuB,CAAC;QAI3E,OAAO,CAAC,MAAM;aACX,IAAI,CACH,MAAM;;;;QAAC,UAAC,KAAsB,IAAK,OAAA,KAAK,YAAY,eAAe,IAAI,KAAK,CAAC,iBAAiB,KAAK,UAAU,GAAA,EAAC,CAC/G;aACA,SAAS;;;;QAAC,UAAC,KAAsB;YAChC,IAAI,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;gBAC9B,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;aAC5B;SACF,EAAC,CAAC;;KACN;;;;;;IAEK,gDAAY;;;;;IAAlB,UAAmB,QAAgB,EAAE,IAA0B;;;;;;8BAC7B,OAAO,IAAI,KAAK,QAAQ,CAAA,EAAxB,wBAAwB;wBAAG,qBAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAA;;wBAA1B,KAAA,SAA0B,CAAA;;;wBAAG,KAAA,IAAI,CAAA;;;wBAAtF,UAAU,KAA4E;wBAC5F,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;;;;;KAC1C;;;;;IAED,6CAAS;;;;IAAT,UAAU,QAAgB;;YAClB,UAAU,GAAgB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvD,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,UAAU,IAAI,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE;;YAE7D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;;gBAC5D,YAAY,GAAkB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAC5D,IAAI,CAAC,wBAAwB,CAC3B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,gBAAgB,EAAE,UAAU,CAAC,iBAAiB,CAAC,CAC/F,CACF;YACD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO,YAAY,CAAC;SACrB;aAAM;;YAEL,OAAO,CAAC,IAAI,CAAC,UAAQ,QAAQ,8CAA2C,CAAC,CAAC;SAC3E;KACF;;;;;;;;;IAID,2DAAuB;;;;;;;IAAvB,UAAwB,UAA2B;QAAnD,iBAqBC;QArBuB,2BAAA,EAAA,mBAA2B;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CACnC,YAAY,CAAC,GAAG,CAAC,EACjB,GAAG;;;;QAAC,UAAC,MAAgB;;gBACb,SAAS,GAAW,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;YAChD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;;;oBAEpB,YAAY,GAAoB,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;;gBAEjF,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;;;oBAE5B,GAAG,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ;gBACnG,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE;oBAC3B,GAAG,IAAI,GAAG,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;iBACtC;;gBAED,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;aACrD;SACF,EAAC,CACH,CAAC;KACH;;;;;;IAEa,6CAAS;;;;;IAAvB,UAAwB,OAAe;;;;;;wBAC/B,OAAO,GAAuB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC;;;;wBAExD,qBAAM,OAAO;iCACjB,IAAI,CACH,GAAG;;;;4BAAC,UAAC,SAAc;gCACjB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;6BAC9C,EAAC,CACH;iCACA,SAAS,EAAE,EAAA;4BANd,sBAAO,SAMO,EAAC;;;wBAEf,sBAAO,SAAS,EAAC;;;;;KAEpB;;;;;;IAEO,4CAAQ;;;;;IAAhB,UAAiB,GAAW;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAChC;;;;;;IAEO,4DAAwB;;;;;IAAhC,UAAiC,WAA8B;QAA/D,iBAmBC;QAlBC,WAAW,CAAC,OAAO;;;;QAAC,UAAC,IAAqB;YACxC,IAAI,IAAI,CAAC,OAAO,EAAE;;oBACV,OAAK,GAAW,IAAI,CAAC,OAAO,CAAC,KAAK;;gBAExC,IAAI,IAAI,CAAC,iBAAiB,EAAE;;wBACpB,mBAAiB,GAAwB,IAAI,CAAC,iBAAiB;oBACrE,IAAI,CAAC,iBAAiB;;;oBAAG;wBACvB,OAAO,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI;;;wBAAC;4BAC9D,OAAO,mBAAiB,EAAE,CAAC;yBAC5B,EAAC,CAAC;qBACJ,CAAA,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,iBAAiB;;;oBAAG,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAK,CAAC,CAAC,GAAA,CAAA,CAAC;iBAC/D;aACF;SACF,EAAC,CAAC;QAEH,OAAO,WAAW,CAAC;KACpB;;gBAxGF,UAAU;;;;gBA9BT,MAAM;gBACN,cAAc;gBAHP,UAAU;;IAyInB,gCAAC;CAAA,CAxG8C,kBAAkB,GAwGhE;;;;;;IAvGC,8CAA6E;;;;;IAEjE,4CAAuB;;;;;IAAE,2CAA8B;;;;;IAAE,gDAA+B;;;;;;;;ICjCtG;KAMwC;;gBANvC,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,yBAAyB,CAAC;oBACtC,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,EAAE;iBACZ;;IACsC,+BAAC;CANxC;;;;;;;;;;;;;;;;;;;"}